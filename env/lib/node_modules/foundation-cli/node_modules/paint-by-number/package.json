{
  "name": "paint-by-number",
  "version": "1.0.0",
  "description": "Color ASCII art with ease.",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "keywords": [
    "ascii",
    "art"
  ],
  "author": {
    "name": "Geoff Kimball",
    "email": "geoff@zurb.com"
  },
  "license": "MIT",
  "dependencies": {
    "chalk": "^1.0.0"
  },
  "devDependencies": {
    "mocha": "^2.2.4"
  },
  "readme": "![Paint by Number](https://raw.githubusercontent.com/gakimball/paint-by-number/master/logo.png)\n\nA small Node library for coloring ASCII art using color maps, which map a color to a character.\n\n```bash\nnpm install paint-by-number\n```\n\nLet's say you have a string like this:\n\n```\nRainbow!\n```\n\nNow you create a color map with a string of the same character length like this:\n\n```\n 0123456\n```\n\nNow you create a palette that maps [ANSI colors](http://en.wikipedia.org/wiki/ANSI_escape_code#Colors) to the numbers.\n\n```js\nvar palette = {\n  0: 'red',\n  1: 'yellow',\n  2: 'green',\n  3: 'cyan',\n  4: 'blue',\n  5: 'magenta',\n  6: 'white'\n}\n```\n\nLet's put it all together.\n\n```js\nvar paint = require('paint-by-number');\n\nvar input  = 'Rainbow!';\nvar colors = ' 0123456';\nvar palette = {\n  0: 'red',\n  1: 'yellow',\n  2: 'green',\n  3: 'cyan',\n  4: 'blue',\n  5: 'magenta',\n  6: 'white'\n};\n\nvar output = paint(input, colors, palette);\nprocess.stdout.write(output);\n```\n\n## paint(input, colors, palette)\n\nColors the characters of a string (or an array of strings) based on a color map and palette. Returns the same string or array, but colored.\n\n### input\n\nType: `String` or `Array`\n\nString or array of strings to be colored.\n\n### colors\n\nType: `String` or `Array`\n\nColor map to refer to when coloring the input string. The structure of `colors` should match that of `input`.\n\nEvery non-whitespace character in the color map is read and checked against the color palette. If a matching color is found, the character in the input string is colored. Use whitespace to indicate that a character should not be colored, which means it will use the user's command line default.\n\n### palette\n\nType: `Object`\n\nColor palette to use when reading the color map. The key is the character to use, and the value is the color to attach to that character. Any character can be a key, but a key must be a single character.\n\nCharacters are colored using [chalk](https://www.npmjs.com/package/chalk). Any function chalk has for coloring can be used as a palette color.\n\n```js\nvar palette = {\n  0: 'red',\n  1: 'bgRed'\n}\n```\n\nIt's also possible to override the default color by adding a one-space key to the palette.\n\n```js\nvar palette = {\n  ' ': 'blue'\n}\n```\n",
  "readmeFilename": "readme.md",
  "_id": "paint-by-number@1.0.0",
  "dist": {
    "shasum": "3075c8f5025c2082228225d267f5aa05490d7581"
  },
  "_from": "paint-by-number@1.0.0",
  "_resolved": "https://registry.npmjs.org/paint-by-number/-/paint-by-number-1.0.0.tgz"
}
