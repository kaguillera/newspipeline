{
  "name": "now-and-later",
  "version": "0.0.6",
  "description": "Map over an array of values in parallel or series, passing each through the async iterator. Optionally, specify lifecycle extension points for before the iterator runs, after completion, or upon error.",
  "author": {
    "name": "Blaine Bublitz",
    "email": "blaine@iceddev.com",
    "url": "http://iceddev.com/"
  },
  "contributors": [
    {
      "name": "Blaine Bublitz",
      "email": "blaine@iceddev.com",
      "url": "http://iceddev.com/"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/phated/now-and-later"
  },
  "license": "MIT",
  "engines": {
    "node": ">= 0.10"
  },
  "main": "index.js",
  "scripts": {
    "test": "lab -cv",
    "lint": "jshint lib test index.js --reporter node_modules/jshint-stylish/stylish.js --exclude node_modules"
  },
  "dependencies": {
    "once": "^1.3.0"
  },
  "devDependencies": {
    "jshint": "^2.5.5",
    "jshint-stylish": "^0.4.0",
    "lab": "^4.2.0"
  },
  "keywords": [
    "async",
    "async.js",
    "map",
    "control",
    "flow",
    "extension",
    "tracing",
    "debug",
    "aop",
    "aspect",
    "timing",
    "tracing"
  ],
  "readme": "# now-and-later\n\nMap over an array of values in parallel or series, passing each through the async iterator.\nOptionally, specify lifecycle extension points for before the iterator runs, after completion,\nor upon error.\n\n## Usage\n\n```js\nvar nal = require('now-and-later');\n\nfunction iterator(value, cb){\n  cb(null, value * 2)\n}\n\nfunction create(value, key){\n  // return an object to be based to each lifecycle method\n  return { key: key, value: value };\n}\n\nfunction before(storage){\n  console.log('before iterator');\n  console.log('initial value: ', storage.value);\n}\n\nfunction after(result, storage){\n  console.log('after iterator');\n  console.log('initial value: ', storage.value);\n  console.log('result: ', result);\n}\n\nfunction error(err, storage){\n  console.log('afer error in iterator');\n  console.log('error: ', err);\n}\n\n/*\n  Calling mapSeries with an object can't guarantee order\n  It uses Object.keys to get an order\n  It is better to use an array if order must be guaranteed\n */\nnal.mapSeries([1, 2, 3], iterator {\n  create: create,\n  before: before,\n  after: after,\n  error: error\n}, console.log);\n\nnal.map({\n  fn1: fn1,\n  fn2: fn2\n}, {\n  create: create,\n  before: before,\n  after: after,\n  error: error\n}, console.log);\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/phated/now-and-later/issues"
  },
  "homepage": "https://github.com/phated/now-and-later",
  "_id": "now-and-later@0.0.6",
  "dist": {
    "shasum": "18a14dc3fc495dc06cfbe028f00be16ddac4faea"
  },
  "_from": "now-and-later@0.0.6",
  "_resolved": "https://registry.npmjs.org/now-and-later/-/now-and-later-0.0.6.tgz"
}
